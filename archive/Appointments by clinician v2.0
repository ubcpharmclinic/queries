<report title="Appointments by clinician v2.0" description="Generating appointment report by clinician/status/type within a date range- v1.4 RN/JD edit" active="1">

<query>
SELECT 
	d.demographic_no AS 'Id', 
	CONCAT(d.last_name, ", ", d.first_name) AS 'Patient', 
	CONCAT(d.year_of_birth, '-', d.month_of_birth, '-', d.date_of_birth) AS 'Date of birth', 
	FLOOR(DATEDIFF(CURRENT_DATE, STR_TO_DATE(CONCAT(d.year_of_birth, '-', d.month_of_birth, '-', d.date_of_birth), '%Y-%m-%d'))/365.25) AS 'Age', 
	d.sex AS 'Sex', 
	d.patient_status AS 'Patient status', 
	d.postal AS 'Postal code', 
	a.appointment_date AS 'Appointment date',
a.status AS 'Appointment StatusCode',
        s.description AS 'Appointment Status',
	a.start_time AS 'Start time', 
	a.end_time AS 'End time', 
	@duration:=(TIME_FORMAT(SEC_TO_TIME(FLOOR((TIME_TO_SEC((TIMEDIFF(a.end_time,a.start_time)))+450)/900)*900),'%H:%i')) AS 'Duration',
	(TIME_FORMAT(@totaltime:=(ADDTIME(@duration,@totaltime)),'%H:%i')) AS 'Total', 
	a.type AS 'Appointment type', 
	lli.value AS 'Reason Code', 
	CONCAT(p.first_name, " ", p.last_name) AS 'Clinician' 
FROM 
	demographic d
	INNER JOIN appointment a 
		ON (d.demographic_no = a.demographic_no) 
	INNER JOIN provider p 
		ON (a.provider_no = p.provider_no) 
	INNER JOIN LookupListItem lli 
		ON (a.reasonCode = lli.id), 
	(SELECT @totaltime:='00:00:00') c,
        appointment_status s
WHERE 
	BINARY a.status LIKE '{aptstatus}%'
        AND LEFT(a.status, '1') = LEFT(s.status, '1')
        AND d.last_name NOT LIKE 'BOOKED'
        AND d.last_name NOT IN ('test', 'tests', 'booked', 'offsite', 'off site', 'boop', 'DO NOT BOOK')
        AND a.appointment_date BETWEEN 
		IF ('{apt_date_from}' = '', (CURRENT_DATE - INTERVAL 30 Day), '{apt_date_from}') 
			AND 
		IF ('{apt_date_to}' = '', (CURRENT_DATE), '{apt_date_to}')
	AND a.type LIKE '{apt_type}'  
	AND a.provider_no LIKE '{provider}' 
	AND d.patient_status LIKE '{patient_status}' 
	AND d.sex LIKE '{patient_gender}' 
HAVING `Date of birth` BETWEEN
		IF ('{birth_date_from}' = '', (CURRENT_DATE - INTERVAL 110 YEAR), '{birth_date_from}') 
			AND 
		IF ('{birth_date_to}' = '', (CURRENT_DATE), '{birth_date_to}')
ORDER BY a.appointment_date, d.demographic_no, a.status ASC; 
</query>

<param id="apt_date_from" type="text" description="Appointments from (YYYY-MM-DD, default: last 30 days)" />

<param id="apt_date_to" type="text" description="Appointments to (YYYY-MM-DD, default: today)" />

<param id="provider" type="list" description="Clinician">
<param-query>
(SELECT p.provider_no, CONCAT(p.last_name, ", ", p.first_name) AS provider_name
FROM provider p
WHERE p.status = 1
	AND p.provider_type != 'admin')
UNION
(SELECT '%', 'All clinicians')
ORDER BY provider_name ASC;
</param-query>
</param>

<param id="aptstatus" type="list" description="Appointment Status">
<param-query>
(SELECT status, description
FROM appointment_status)
UNION
(SELECT '%', ' All statuses')
ORDER BY status ASC;
</param-query>
</param>

<param id="apt_type" type="list" description="Appointment Type">
<param-query>
(SELECT DISTINCT a.type AS type_id, IF(a.type=' ','-All blanks-',a.type) AS type_list FROM appointment a)
UNION
(SELECT '%', ' All types')
ORDER BY type_list ASC;
</param-query>
</param>

<param id="birth_date_from" type="text" description="Birth date from (YYYY-MM-DD, default: last 110 Years)" />

<param id="birth_date_to" type="text" description="Birth date to (YYYY-MM-DD, default: today)" />

<param id="patient_gender" type="list" description="Gender">
<param-query>
(SELECT DISTINCT d.sex AS 'patient_gender_id', d.sex AS 'patient_gender_list' FROM demographic d)
UNION
(SELECT '%', ' All genders')
ORDER BY patient_gender_list ASC;
</param-query>
</param>

<param id="patient_status" type="list" description="Patient Status">
<param-query>
(SELECT DISTINCT d.patient_status AS 'patient_status_id', d.patient_status AS 'patient_status_list' FROM demographic d)
UNION
(SELECT '%', ' All statuses')
ORDER BY patient_status_list ASC;
</param-query>
</param>

</report>
