<report title="Average Meds in Appointment Group v2" description="Immediately calculates average number of medications in group. Refer to Query #11 - Average Meds in Appointment Group for breakdown per patient. " active="1">

<query>
SELECT 
    'The average number of medications taken by this group is:' AS 'Avg # meds',
    AVG(medsPerPatient) AS '#'

FROM (
    SELECT 
    d.demographic_no, 
    COUNT(DISTINCT dr.drugid) AS 'medsPerPatient'
    FROM 
        demographic d
    INNER JOIN drugs dr 
        ON (d.demographic_no = dr.demographic_no)
    INNER JOIN appointment a 
        ON (d.demographic_no = a.demographic_no) 
    INNER JOIN provider p 
        ON (a.provider_no = p.provider_no)
    WHERE 
        d.last_name NOT LIKE 'BOOKED'
            AND d.last_name NOT IN ('test', 'tests', 'booked', 'offsite', 'off site', 'boop', 'DO NOT BOOK')
            AND a.appointment_date BETWEEN 
            IF ('{apt_date_from}' = '', (CURRENT_DATE - INTERVAL 30 Day), '{apt_date_from}') 
                AND 
            IF ('{apt_date_to}' = '', (CURRENT_DATE), '{apt_date_to}') 
	    AND a.provider_no LIKE '{provider}' 
        AND dr.archived = 0
    GROUP BY d.demographic_no) t

LIMIT 50; 
</query>

<param id="apt_date_from" type="date" description="Appointments from: " />

<param id="apt_date_to" type="date" description="Appointments to: " />

<param id="provider" type="list" description="Clinician">
<param-query>
(SELECT p.provider_no, CONCAT(p.last_name, ", ", p.first_name) AS provider_name
FROM provider p
WHERE p.status = 1)
UNION
(SELECT '%', 'All clinicians')
ORDER BY provider_name ASC;
</param-query>
</param>

</report>
