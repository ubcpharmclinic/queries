<report title="Bone Health Report" description="Patient bone health outcomes by appointment date range" active="1">
<query>
SELECT 
a.appointment_date AS 'Date',
	d.demographic_no AS 'Pt. ID',
#Age
	DATE_FORMAT( 
		FROM_DAYS( 
			DATEDIFF( CURDATE(), DATE_FORMAT( DATE( CONCAT(d.year_of_birth, "-", d.month_of_birth, "-", d.date_of_birth) ), "%Y-%m-%d" ) ) 
		), "%Y"
	) + 0 AS 'Age',
#Gender
	d.sex AS 'Gender',

#FRAX1 score – major fracture
	IFNULL(FRX1.dataField, '') AS 'MAJOR RISK',
#FRAX2 score – HIP FRACTURE
	IFNULL(FRX2.dataField, '') AS 'HIP RISK',
#Dose too low
	IFNULL(DOTL.dataField, '') AS 'DTP DOTL',
#Dose too high
	IFNULL(DOTH.dataField, '') AS 'DTP DOTH',

a.type AS 'Apt. Type'
FROM demographic d
JOIN appointment a
	ON (a.demographic_no = d.demographic_no
AND DATE(a.appointment_date) BETWEEN '{apt_date_from}' AND '{apt_date_to}')

#MAJOR FRAX SCORE FRAX score – major fracture
LEFT JOIN measurements FRX1
	ON ( FRX1.demographicNo = d.demographic_no
	AND ( FRX1.type LIKE "%FRX1%" OR FRX1.type LIKE "%FRXI%" )
	AND date_format(a.appointment_date, '%Y-%m-%d') = date_format(FRX1.dateObserved, '%Y-%m-%d') )

#HIP FRACTURE SCORE FRAX score – hip fracture
LEFT JOIN measurements FRX2
	ON (FRX2.demographicNo = d.demographic_no
	AND FRX2.type LIKE "%FRX2%"
	AND date_format(a.appointment_date, '%Y-%m-%d') = date_format(FRX2.dateObserved, '%Y-%m-%d') )

LEFT JOIN measurements DOTL
	ON (DOTL.demographicNo = d.demographic_no 
		AND DOTL.type LIKE "%DOTL%" 
		AND date_format(a.appointment_date, '%Y-%m-%d') = date_format(DOTL.dateObserved, '%Y-%m-%d') )

LEFT JOIN measurements DOTH
	ON (DOTH.demographicNo = d.demographic_no 
		AND DOTH.type LIKE "%DOTH%" 
			AND date_format(a.appointment_date, '%Y-%m-%d') = date_format(DOTH.dateObserved, '%Y-%m-%d') )

WHERE ( d.last_name NOT LIKE '%TEST%' AND d.last_name NOT LIKE '%BOOP%' )
AND d.patient_status LIKE "%ac%"
AND ( a.status NOT LIKE "%c%" AND a.status NOT LIKE "%n%" AND a.status NOT LIKE "%cs%" AND a.status NOT LIKE "%ns%" )
AND (a.type LIKE 'Traveling Health Fair' OR a.type LIKE 'THF')
GROUP BY  d.demographic_no, a.appointment_date HAVING COUNT(a.appointment_date) > -1
ORDER BY d.last_name, a.appointment_date;
</query>
<param id="apt_date_from" type="date" description="Appointments from:" />
<param id="apt_date_to" type="date" description="Appointments to:" />
<param id="" type="" description="">
</param>
</report>
